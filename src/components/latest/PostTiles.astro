---
import { Icon } from 'astro-icon/components';
import type { Post } from '../../layouts/post/postLayout';
import { selectPostDate } from '../../layouts/post/postLayout';
import { getRelativeLocaleUrl } from 'astro:i18n';
import './PostTiles.css';
import { getImage, Picture } from 'astro:assets';
import { languages } from '../../i18n/ui';
import { useTranslations } from '../../i18n/lang-utils';

const { posts } = Astro.props as { posts: Post[] };
const lang = Astro.currentLocale as keyof typeof languages;
const t = useTranslations(lang);

const postz = await Promise.all(
  posts.map(async post => {
    const src = (await import(`../../pictures/${post.data.image?.url}.jpg`)).default;
    const placeholder = await getImage({ src, format: 'avif', width: 40 });
    return {
      ...post,
      picture: {
        src,
      },
      placeholder,
    };
  }),
);
---

<section>
  <div style="display: flex; flex-direction: row; align-items: center; justify-content: space-between; ">
    <h2>{t('blog.recent-posts')}</h2>
    <a href={getRelativeLocaleUrl(lang, '/blog')} title={t('blog.switch-to-list')}>
      <Icon name="material-symbols:list-alt-outline-sharp" />
    </a>
  </div>
  <div class="tiles-container">
    {
      postz.map(post => (
        <article class="tile">
          <a class="tile__link-container" href={getRelativeLocaleUrl(lang, `/blog/${post.slug}`)}>
            <div class="tile__picture-container" style={`background-image: url(${post.placeholder.src})`}>
              <Picture
                class="tile__picture"
                src={post.picture.src}
                formats={['avif', 'webp', 'jpg']}
                alt={post.data.image?.alt || '🖼️'}
                width="1280"
                transition:name={'img_' + post.slug}
              />
              <div class="tile__title title" transition:name={'title_' + post.slug}>
                {post.data.title}
              </div>
            </div>
            <div class="tile__description">{post.data.description}</div>
            <span class="tile__date" transition:name={'publishedAt_' + post.slug}>
              {selectPostDate(post.data, lang)}
            </span>
          </a>
        </article>
      ))
    }
  </div>
</section>
